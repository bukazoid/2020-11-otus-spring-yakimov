{"version":3,"sources":["webpack:///./src/main/js/components/Books.js"],"names":["Books","getModel","doFetch","then","handleApiError","response","json","setState","data","refreshList","error","console","state","selected","showEdit","showDelete","loadData","prevProps","rows","map","book","rowBook","Object","assign","model","Component","msgPrefix","idList","id","GridProperty"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;IAEMA,K;;;;;AACJ,mBAAc;AAAA;;AAAA;;AACZ;;AADY,4DAWNA,KAAK,CAACC,QAAN,CAAe,MAAf,EAAuB,CAAC,IAAD,EAAO,OAAP,EAAgB,QAAhB,CAAvB,CAXM;;AAAA,+DAuBH,YAAM;AACfC,mEAAO,CAAC,YAAD,EAAe,KAAf,CAAP,CACGC,IADH,CACQC,4DADR,EAEGD,IAFH,CAEQ,UAACE,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAFR,EAGGH,IAHH,CAGQ,UAACG,IAAD;AAAA,eAAU,MAAKC,QAAL,CAAc;AAAEC,cAAI,EAAEF,IAAR;AAAcG,qBAAW,EAAE;AAA3B,SAAd,CAAV;AAAA,OAHR,WAIS,UAACC,KAAD;AAAA,eAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,OAJT;AAKD,KA7Ba;;AAEZ,UAAKE,KAAL,GAAa;AACXJ,UAAI,EAAE,IADK;AAEXK,cAAQ,EAAE,IAFC;AAGXC,cAAQ,EAAE,KAHC;AAIXC,gBAAU,EAAE;AAJD,KAAb;AAFY;AAQb,G,CAED;;;;;WAGA,6BAAoB;AAClB,WAAKC,QAAL;AACD;;;WAED,4BAAmBC,SAAnB,EAA8B;AAC5B,UAAI,KAAKL,KAAL,CAAWH,WAAf,EAA4B;AAC1B,aAAKO,QAAL;AACD;AACF;;;WAcD,kBAAS;AACP,UAAI,CAAC,KAAKJ,KAAL,CAAWJ,IAAhB,EAAsB;AAClB,eAAO,EAAP;AACH;;AAHM,UAKCA,IALD,GAKU,KAAKI,KALf,CAKCJ,IALD;AAOP,UAAMU,IAAI,GAAGV,IAAI,CAACW,GAAL,CAAS,UAACC,IAAD,EAAU;AAC9B,YAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,IAAlB,CAAhB;AAEAC,eAAO,CAAC,SAAD,CAAP,gBAAqB,mFAArB;AAEA,eAAOA,OAAP;AACD,OANY,CAAb;AAQA,0BACE,qFACE,6FADF,eAEE,2DAAC,oDAAD;AAAM,aAAK,EAAE,KAAKG,KAAlB;AAAyB,YAAI,EAAEN;AAA/B,QAFF,CADF;AAMD;;;;EAzDiBO,+C;;gBAAdzB,K,cAgCc,UAAC0B,SAAD,EAAYC,MAAZ,EAAuB;AACvC,SAAOA,MAAM,CAACR,GAAP,CAAW,UAACS,EAAD;AAAA,WAAQ,IAAIC,4DAAJ,CAAiBD,EAAjB,EAAqBA,EAArB,CAAR;AAAA,GAAX,CAAP;AACD,C;;AA0BY5B,oEAAf,E","file":"main.3b9ffb3267626171a885.hot-update.js","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"../common/Grid\";\nimport GridProperty from \"../common/GridProperty\";\nimport { handleApiError, doFetch } from \"../common/Tools\";\n\nclass Books extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      selected: null,\n      showEdit: false,\n      showDelete: false,\n    };\n  }\n\n  //model = Books.getModel(\"Book\", [\"id\", \"title\", \"author\", \"genres\"]);\n  model = Books.getModel(\"Book\", [\"id\", \"title\", \"author\"]);\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.refreshList) {\n      this.loadData();\n    }\n  }\n\n  loadData = () => {\n    doFetch(\"/api/books\", \"GET\")\n      .then(handleApiError)\n      .then((response) => response.json())\n      .then((json) => this.setState({ data: json, refreshList: false }))\n      .catch((error) => console.error(error));\n  };\n\n  static getModel = (msgPrefix, idList) => {\n    return idList.map((id) => new GridProperty(id, id));\n  };\n\n  render() {\n    if (!this.state.data) {\n        return \"\";\n    }\n\n    const { data } = this.state;\n    \n    const rows = data.map((book) => {\n      const rowBook = Object.assign({}, book);\n\n      rowBook[\"actions\"] = <span>actions</span>;\n\n      return rowBook;\n    });\n\n    return (\n      <div>\n        <h1>Book: My React App!</h1>\n        <Grid model={this.model} data={rows} />\n      </div>\n    );\n  }\n}\n\nexport default Books;\n"],"sourceRoot":""}