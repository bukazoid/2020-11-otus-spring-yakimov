{"version":3,"sources":["webpack:///./src/main/js/common/Grid.js","webpack:///./src/main/js/common/GridProperty.js"],"names":["Grid","dataField","order","paginationSize","pageStartIndex","hideSizePerPage","hidePageListOnlyOnePage","disablePageTitle","textFilter","placeholder","defaultSorted","getDefaultSortOptions","paginationOptions","getDefaultPagingOptions","filter","getDefaultFilterOptions","props","model","data","headers","map","prop","label","header","id","text","sort","emptyDataMessage","filterFactory","paginationFactory","React","Component","PropTypes","arrayOf","instanceOf","GridProperty","isRequired","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBA,I;;;;;;;;;;;;;;;;4EASK,YAAM;AAC5B,aAAO,CAAC;AAAEC,iBAAS,EAAE,IAAb;AAAmBC,aAAK,EAAE;AAA1B,OAAD,CAAP;AACD,K;;8EAKyB,YAAM;AAC9B,aAAO;AACLC,sBAAc,EAAE,CADX;AAELC,sBAAc,EAAE,CAFX;AAGLC,uBAAe,EAAE,IAHZ;AAILC,+BAAuB,EAAE,IAJpB;AAKLC,wBAAgB,EAAE;AALb,OAAP;AAOD,K;;8EAKyB,YAAM;AAC9B,aAAOC,uJAAU,CAAC;AAAEC,mBAAW,EAAE;AAAf,OAAD,CAAjB,CAD8B,CACW;AAC1C,K;;;;;;;WAED,kBAAS;AACP,UAAMC,aAAa,GAAG,KAAKC,qBAAL,EAAtB;AACA,UAAMC,iBAAiB,GAAG,KAAKC,uBAAL,EAA1B;AACA,UAAMC,MAAM,GAAG,KAAKC,uBAAL,EAAf;AAHO,wBAIiB,KAAKC,KAJtB;AAAA,UAICC,KAJD,eAICA,KAJD;AAAA,UAIQC,IAJR,eAIQA,IAJR;AAMP,UAAMC,OAAO,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAU;AAClC,YAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,YAAMC,MAAM,GAAG;AAAEtB,mBAAS,EAAEoB,IAAI,CAACG,EAAlB;AAAsBC,cAAI,EAAEH,KAA5B;AAAmCI,cAAI,EAAE,IAAzC;AAA+CZ,gBAAM,EAAEA;AAAvD,SAAf;;AACA,YAAIO,IAAI,CAACG,EAAL,KAAY,YAAZ,IAA4BH,IAAI,CAACG,EAAL,KAAY,SAA5C,EAAuD;AACrD,iBAAOD,MAAM,CAACG,IAAd;AACA,iBAAOH,MAAM,CAACT,MAAd;AACD;;AACD,eAAOS,MAAP;AACD,OARe,CAAhB;AASA,UAAMI,gBAAgB,gBAAG,2DAAC,oIAAD;AAAkB,UAAE,EAAC;AAArB,QAAzB,CAfO,CAekE;;AACzE,0BACE,2DAAC,oJAAD;AACE,gBAAQ,EAAC,IADX;AAEE,YAAI,EAAET,IAFR;AAGE,eAAO,EAAEC,OAHX;AAIE,eAAO,MAJT;AAKE,aAAK,MALP;AAME,iBAAS,MANX;AAOE,wBAAgB,EAAEQ,gBAPpB;AAQE,qBAAa,EAAEjB,aARjB;AASE,cAAM,EAAEkB,uJAAa,EATvB;AAUE,kBAAU,EAAEC,0JAAiB,CAACjB,iBAAD;AAV/B,QADF;AAcD;;;;EA/D+BkB,4CAAK,CAACC,S;;gBAAnB/B,I,eACA;AACjBiB,OAAK,EAAEe,iDAAS,CAACC,OAAV,CAAkBD,iDAAS,CAACE,UAAV,CAAqBC,qDAArB,CAAlB,EAAsDC,UAD5C;AAEjBlB,MAAI,EAAEc,iDAAS,CAACC,OAAV,CAAkBD,iDAAS,CAACK,GAA5B,EAAiCD;AAFtB,C;;;;;;;;;;;;;;;;;;IChBAD,Y,GACjB,sBAAYX,EAAZ,EAAgBF,KAAhB,EAAuB;AAAA;;AACrB,OAAKE,EAAL,GAAUA,EAAV;AACA,OAAKF,KAAL,GAAaA,KAAb;AACD,C","file":"main.c8336245669d15dca111.hot-update.js","sourcesContent":["import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { FormattedMessage } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport GridProperty from \"./GridProperty\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\n/**\n * Here we use BootstrapTable (filters, pagination, sorting are already included, but installed as an independent librarys)\n * For more information see:\n * https://react-bootstrap-table.github.io/react-bootstrap-table2/\n */\nexport default class Grid extends React.Component {\n  static propTypes = {\n    model: PropTypes.arrayOf(PropTypes.instanceOf(GridProperty)).isRequired,\n    data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  };\n  /**\n   * More sort options you can find on:\n   * https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/basic-sort.html\n   */\n  getDefaultSortOptions = () => {\n    return [{ dataField: \"id\", order: \"desc\" }];\n  };\n  /**\n   * More pagination options you can find on:\n   * https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/basic-pagination.html\n   */\n  getDefaultPagingOptions = () => {\n    return {\n      paginationSize: 4,\n      pageStartIndex: 1,\n      hideSizePerPage: true,\n      hidePageListOnlyOnePage: true,\n      disablePageTitle: true,\n    };\n  };\n  /**\n   * More filter options you can find on:\n   * https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/basic-filter.html\n   */\n  getDefaultFilterOptions = () => {\n    return textFilter({ placeholder: \" \" }); //TODO need to add a right text for each placeholder\n  };\n\n  render() {\n    const defaultSorted = this.getDefaultSortOptions();\n    const paginationOptions = this.getDefaultPagingOptions();\n    const filter = this.getDefaultFilterOptions();\n    const { model, data } = this.props;\n\n    const headers = model.map((prop) => {\n      const label = prop.label;\n      const header = { dataField: prop.id, text: label, sort: true, filter: filter };\n      if (prop.id === \"additional\" || prop.id === \"actions\") {\n        delete header.sort;\n        delete header.filter;\n      }\n      return header;\n    });\n    const emptyDataMessage = <FormattedMessage id=\"common.no-table-data\" />; //TODO emptyDataMessage should be in text format\n    return (\n      <BootstrapTable\n        keyField=\"id\"\n        data={data}\n        columns={headers}\n        striped\n        hover\n        condensed\n        noDataIndication={emptyDataMessage}\n        defaultSorted={defaultSorted}\n        filter={filterFactory()}\n        pagination={paginationFactory(paginationOptions)}\n      />\n    );\n  }\n}\n","export default class GridProperty {\n    constructor(id, label) {\n      this.id = id;\n      this.label = label;\n    }\n  }\n  "],"sourceRoot":""}